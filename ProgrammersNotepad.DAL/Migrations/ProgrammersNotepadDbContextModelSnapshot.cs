// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProgrammersNotepad.DAL.Entities;

namespace ProgrammersNotepad.DAL.Migrations
{
    [DbContext(typeof(ProgrammersNotepadDbContext))]
    partial class ProgrammersNotepadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProgrammersNotepad.DAL.Entities.LanguageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LanguageSet");
                });

            modelBuilder.Entity("ProgrammersNotepad.DAL.Entities.NoteEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.ToTable("NoteSet");

                    b.HasDiscriminator<string>("Discriminator").HasValue("NoteEntity");
                });

            modelBuilder.Entity("ProgrammersNotepad.DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserSet");
                });

            modelBuilder.Entity("ProgrammersNotepad.DAL.Entities.LanguageNoteEntity", b =>
                {
                    b.HasBaseType("ProgrammersNotepad.DAL.Entities.NoteEntity");

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("LanguageId");

                    b.HasDiscriminator().HasValue("LanguageNoteEntity");
                });

            modelBuilder.Entity("ProgrammersNotepad.DAL.Entities.NoteEntity", b =>
                {
                    b.HasOne("ProgrammersNotepad.DAL.Entities.UserEntity", null)
                        .WithMany("ListOfNotes")
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("ProgrammersNotepad.DAL.Entities.LanguageNoteEntity", b =>
                {
                    b.HasOne("ProgrammersNotepad.DAL.Entities.LanguageEntity", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ProgrammersNotepad.DAL.Entities.UserEntity", b =>
                {
                    b.Navigation("ListOfNotes");
                });
#pragma warning restore 612, 618
        }
    }
}
